# This workflow builds and pushes a Docker container to Google Artifact Registry
# and deploys it on Cloud Run when a commit is pushed to the "master" branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
     - master 

env:
  PROJECT_ID: 'agent-455009'  # TODO: update to your Google Cloud project ID
  REGION: 'us-central1'  # TODO: update to your region
  SERVICE: 'my-service'  # TODO: update to your service name
  REPOSITORY_NAME: 'gh-action-1'  # Artifact Registry repository name
  GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  # JSON key file stored in GitHub secrets

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'  # Updated version of actions/checkout

      # Authenticate to Google Cloud using the JSON credentials file
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_JSON }}'  # Use the JSON credentials secret

      # Step to configure Docker authentication using gcloud
      - name: 'Authenticate Docker to Artifact Registry'
        run: |
          # Authenticate Docker with Artifact Registry
          gcloud auth configure-docker us-central1-docker.pkg.dev  # Replace 'us-central1' with your region

      - name: 'Build and Push Container'
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
      
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}'

      # If required, use the Cloud Run URL output in later steps
      - name: 'Show Cloud Run URL'
        run: |
          echo "Deployed to Cloud Run at: ${{ steps.deploy.outputs.url }}"