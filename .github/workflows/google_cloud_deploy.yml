name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: 'agent-455009'  # TODO: update to your Google Cloud project ID
  REGION: 'us-central1'  # TODO: update to your region
  SERVICE: 'my-service'  # TODO: update to your service name
  REPOSITORY_NAME: 'gh-action-1'  # Artifact Registry repository name
  GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      # Authenticate to Google Cloud using the JSON credentials file
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS_JSON }}'

      # Authenticate Docker to Artifact Registry
      - name: 'Authenticate Docker to Artifact Registry'
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      # Build and Push Container
      - name: 'Build and Push Container'
        run: |
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Deploy to Cloud Run with environment variables
      - name: 'Deploy to Cloud Run'
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --image "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars GROQ_API_KEY=${{ secrets.GROQ_API_KEY }},TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

      # Show Cloud Run URL
      - name: 'Show Cloud Run URL'
        run: |
          echo "Deployed to Cloud Run at: ${{ steps.deploy.outputs.url }}"
